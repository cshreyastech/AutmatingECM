//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.EcmMoveit
{
    public class ECMMoveitJoints : Message
    {
        public const string RosMessageName = "ecm_moveit/ECMMoveitJoints";

        public double baselink_yawlink;
        public double yawlink_pitchbacklink;
        public double pitchendlink_maininsertionlink;
        public double maininsertionlink_toollink;
        public Geometry.Pose pick_pose;
        public Geometry.Pose place_pose;

        public ECMMoveitJoints()
        {
            this.baselink_yawlink = 0.0;
            this.yawlink_pitchbacklink = 0.0;
            this.pitchendlink_maininsertionlink = 0.0;
            this.maininsertionlink_toollink = 0.0;
            this.pick_pose = new Geometry.Pose();
            this.place_pose = new Geometry.Pose();
        }

        public ECMMoveitJoints(double baselink_yawlink, double yawlink_pitchbacklink, double pitchendlink_maininsertionlink, double maininsertionlink_toollink, Geometry.Pose pick_pose, Geometry.Pose place_pose)
        {
            this.baselink_yawlink = baselink_yawlink;
            this.yawlink_pitchbacklink = yawlink_pitchbacklink;
            this.pitchendlink_maininsertionlink = pitchendlink_maininsertionlink;
            this.maininsertionlink_toollink = maininsertionlink_toollink;
            this.pick_pose = pick_pose;
            this.place_pose = place_pose;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            listOfSerializations.Add(BitConverter.GetBytes(this.baselink_yawlink));
            listOfSerializations.Add(BitConverter.GetBytes(this.yawlink_pitchbacklink));
            listOfSerializations.Add(BitConverter.GetBytes(this.pitchendlink_maininsertionlink));
            listOfSerializations.Add(BitConverter.GetBytes(this.maininsertionlink_toollink));
            listOfSerializations.AddRange(pick_pose.SerializationStatements());
            listOfSerializations.AddRange(place_pose.SerializationStatements());

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            this.baselink_yawlink = BitConverter.ToDouble(data, offset);
            offset += 8;
            this.yawlink_pitchbacklink = BitConverter.ToDouble(data, offset);
            offset += 8;
            this.pitchendlink_maininsertionlink = BitConverter.ToDouble(data, offset);
            offset += 8;
            this.maininsertionlink_toollink = BitConverter.ToDouble(data, offset);
            offset += 8;
            offset = this.pick_pose.Deserialize(data, offset);
            offset = this.place_pose.Deserialize(data, offset);

            return offset;
        }

        public override string ToString()
        {
            return "ECMMoveitJoints: " +
            "\nbaselink_yawlink: " + baselink_yawlink.ToString() +
            "\nyawlink_pitchbacklink: " + yawlink_pitchbacklink.ToString() +
            "\npitchendlink_maininsertionlink: " + pitchendlink_maininsertionlink.ToString() +
            "\nmaininsertionlink_toollink: " + maininsertionlink_toollink.ToString() +
            "\npick_pose: " + pick_pose.ToString() +
            "\nplace_pose: " + place_pose.ToString();
        }
    }
}
